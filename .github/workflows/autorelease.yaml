name: Automatically release

env:
  packageName: "nadena.dev.misc-unity-tools"

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  increment-version:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.read_version.outputs.version }}
      skip: ${{ steps.check_commit_author.outputs.skip }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check last commit author
        id: check_commit_author
        run: |
          if [ "$(git log -1 --pretty=format:'%an')" == "GitHub Actions" ]; then
            echo "Commit author is GitHub Actions"
            echo ::set-output name=skip::true
          else
            echo "Commit author is not GitHub Actions"
            echo ::set-output name=skip::false
          fi
      - name: Increment version
        id: increment_version
        if: steps.check_commit_author.outputs.skip != 'true'
        run: |
          jq '.version = (.version | split(".") | .[2] = (.[2] | tonumber | . + 1) | join("."))' \
            package.json > package.json.tmp
          mv -vf package.json.tmp package.json
      - name: Read version
        id: read_version
        if: steps.check_commit_author.outputs.skip != 'true'
        run: |
          echo ::set-output name=version::$(jq -r .version package.json)
      - name: Commit and push
        if: steps.check_commit_author.outputs.skip != 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@nadena.dev"
          git commit -am "Bump version to ${{ steps.read_version.outputs.version }}"
          git tag -a ${{ steps.read_version.outputs.version }} -m "Release ${{ steps.read_version.outputs.version }}"
          git push origin HEAD:main --follow-tags

  release:
    needs: [increment-version]
    if: needs.increment-version.outputs.skip != 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Environment Variables
        run: |
          echo "zipFile=${{ env.packageName }}-${{ needs.increment-version.outputs.version }}".zip >> $GITHUB_ENV

      - name: Create Zip
        run: |
          zip ".github/${{env.zipFile}}" ./* -r -x .github .git '.git/*' '*~/*' '*.ps1*'
          mv .github/${{env.zipFile}} ${{env.zipFile}}

      - uses: actions/upload-artifact@v4
        with:
          name: package-zip
          path: ${{ env.zipFile }}

      - name: Make Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          draft: false
          generate_release_notes: true
          tag_name: ${{ needs.increment-version.outputs.version }}
          name: ${{ needs.increment-version.outputs.version }}
          files: |
            ${{ env.zipFile }}
            package.json