name: Automatically bump version and trigger release

env:
  packageName: "nadena.dev.misc-unity-tools"

on:
  workflow_dispatch:
  push:
    branches:
      - main


jobs:
  increment-version:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.read_version.outputs.version }}
      skip: ${{ steps.check_commit_author.outputs.skip }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: release
      
      - name: Check if release is required
        id: check_release
        run: |
          git fetch origin main
          if git merge-base --is-ancestor main release; then
            echo "No new commits on release branch"
            exit 1
          else
            echo "New commits on release branch"
          fi
      
      - name: Merge into release branch
        id: merge_release
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@nadena.dev"
          git merge origin/main
          
      - name: Increment version
        id: increment_version
        if: steps.check_commit_author.outputs.skip != 'true'
        run: |
          jq '.version = (.version | split(".") | .[2] = (.[2] | tonumber | . + 1) | join("."))' \
            package.json > package.json.tmp
          mv -vf package.json.tmp package.json

      - name: Read version
        id: read_version
        if: steps.check_commit_author.outputs.skip != 'true'
        run: |
          echo ::set-output name=version::$(jq -r .version package.json)

      - name: Commit and push
        if: steps.check_commit_author.outputs.skip != 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@nadena.dev"
          git commit -am "Bump version to ${{ steps.read_version.outputs.version }}"
          git tag -a ${{ steps.read_version.outputs.version }} -m "Release ${{ steps.read_version.outputs.version }}"
          git push origin release --follow-tags

  release:
    needs: [increment-version]
    if: needs.increment-version.outputs.skip != 'true'
    permissions:
      contents: write
    uses: bdunderscore/misc-unity-tools/.github/workflows/do-release.yaml@main
    with:
      version_tag: ${{ needs.increment-version.outputs.version }}
    secrets: inherit